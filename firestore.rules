rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // Events
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Registrations
    match /registrations/{registrationId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && (
        isAdmin() || 
        (isOwner(resource.data.userId) && 
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['status', 'paymentStatus', 'paymentId']))
      );
      allow delete: if isAdmin();
    }
  }
}