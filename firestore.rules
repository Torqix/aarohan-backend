rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.token.email == userId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() || isOwner(userId);
    }

    // Events
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Registrations
    match /registrations/{registrationId} {
      allow read: if isSignedIn() && (
        isAdmin() || 
        isOwner(resource.data.userId) || 
        isOwner(request.auth.token.email)
      );
      allow create: if isSignedIn() && 
        request.resource.data.userId == request.auth.token.email &&
        request.resource.data.email == request.auth.token.email;
      allow update: if isAdmin() || 
        (isSignedIn() && isOwner(resource.data.userId) && 
         resource.data.userId == request.resource.data.userId);
    }
  }
}